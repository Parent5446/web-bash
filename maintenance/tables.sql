DROP DATABASE IF EXISTS webbash;
CREATE DATABASE webbash;
USE webbash;

DROP TABLE IF EXISTS grp;
CREATE TABLE grp (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	name CHAR(255) NOT NULL
);

DROP TABLE IF EXISTS user;
CREATE TABLE user (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	homedir INT UNSIGNED,

	email VARCHAR(255),
	email_confirmed BOOL NOT NULL DEFAULT false,
	password TINYBLOB NOT NULL,
	token BINARY(64),

	UNIQUE KEY (name)
);

DROP TABLE IF EXISTS usergroup;
CREATE TABLE usergroup (
	user INT UNSIGNED NOT NULL,
	grp INT UNSIGNED NOT NULL,

	PRIMARY KEY (user, grp),
	UNIQUE KEY (grp, user),
	FOREIGN KEY (user) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (grp) REFERENCES grp (id) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS file;
CREATE TABLE file (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	parent INT UNSIGNED,
	name VARCHAR(255) NOT NULL,
	size BIGINT UNSIGNED,
	filetype ENUM( 'f', 'l', 'd' ) NOT NULL DEFAULT 'f',
	linkid INT UNSIGNED,
	linkpath TINYBLOB,

	owner INT UNSIGNED,
	grp INT UNSIGNED,
	perms BIT(12) NOT NULL,

	atime TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	mtime TIMESTAMP,
	ctime TIMESTAMP,

	UNIQUE KEY (parent, name),
	FOREIGN KEY (parent) REFERENCES file (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (linkid) REFERENCES file (id) ON UPDATE CASCADE ON DELETE SET NULL,
	FOREIGN KEY (owner) REFERENCES user (id) ON UPDATE CASCADE ON DELETE SET NULL,
	FOREIGN KEY (grp) REFERENCES grp (id) ON UPDATE CASCADE ON DELETE SET NULL
);

ALTER TABLE user
ADD FOREIGN KEY (homedir) REFERENCES file (id) ON UPDATE CASCADE ON DELETE SET NULL;

DROP TABLE IF EXISTS job;
CREATE TABLE job (
	user INT UNSIGNED NOT NULL,
	id INT UNSIGNED NOT NULL,

	status ENUM( 'running', 'stopped', 'terminated' ) NOT NULL DEFAULT 'running',
	command TINYBLOB,

	PRIMARY KEY (user, id),
	FOREIGN KEY (user) REFERENCES user (id) ON UPDATE CASCADE ON DELETE RESTRICT
);

DROP TABLE IF EXISTS filedescriptor;
CREATE TABLE filedescriptor (
	user INT UNSIGNED NOT NULL,
	file INT UNSIGNED NOT NULL,
	job INT UNSIGNED NOT NULL,

	lck SET('read', 'write') NOT NULL DEFAULT '',
	expiry TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY (user, file, job),
	FOREIGN KEY (user) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (file) REFERENCES file (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (user, job) REFERENCES job (user, id) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS history;
CREATE TABLE history (
	user INT UNSIGNED NOT NULL,
	id INT UNSIGNED NOT NULL,

	command TINYBLOB,

	PRIMARY KEY (user, id),
	FOREIGN KEY (user) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO file SET id = 1, name = 'root', filetype = 'd';
INSERT INTO user SET
	id = 1, name = 'root', email = 'root@localhost', email_confirmed = 1, homedir = 1,
	password = '$2y$12$0123456789abcdef$$$$$.sMqsjwio4LlHArw/x3le5iiIC7NQhP2';
INSERT INTO grp SET id = 1, name = 'root';
INSERT INTO grp SET id = 2, name = 'admin';
UPDATE file SET owner = 1, grp = 1;
INSERT INTO usergroup SET user = 1, grp = 1;
INSERT INTO usergroup SET user = 1, grp = 2;
